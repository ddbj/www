{"version":3,"sources":["../../_javascript/internalLink.js","../../_javascript/main.js","../../_javascript/accordionMenu.js","../../_javascript/switchAppearance.js","../../_javascript/taggingListView.js","../../_javascript/lightBox.js"],"names":["internalLink","document","getElementById","itemsOfToc","tocContainer","headings","querySelector","querySelectorAll","outline","currentNode","i","length","currentHeading","date","$","next","text","tagName","push","namedAnchor","setAttribute","name","getAttribute","textContent","replace","anchor","createElement","appendChild","id","classList","add","innerHTML","map","item","createItemOfToc","join","each","index","elm","target","dataset","rect","y","undefined","height","createToc","on","e","history","replaceState","delegateTarget","href","animate","scrollTop","offsetTop","duration","window","container","clientHeight","updateHighlightingOfToc","trigger","hash","location","substr","decodedHash","decodeURIComponent","filter","nodeName","subitem","screenTop","scrollY","intersect","innerHeight","remove","rect1","rect2","sy","Math","max","h","min","onload","this","slideToggle","toggleClass","click","parent","prev","removeClass","appearanceWwitch","buttons","forEach","button","addEventListener","parentNode","appearanceType","appearanceValue","switchAppearance","urlParameters","path","taggingListView","taggingItems","selectedTags","tagViews","facetSearch","updateTag","count","_loop","key","tagView","indexOf","tag","_step5","concatenatedSelectedTags","concatenated","_iterator5","_createForOfIteratorHelper","s","n","done","_step6","taggingItem","value","isHidden","_iterator6","selectedTag","ddbj_facetsearch_tags","err","f","Object","defineProperties","get","_this","keys","reduce","acc","tags","concat","_this2","console","log","sortBy","split","tabMenuView","tabMenuItems","tabbedContents","tab","tabbedContent","setupTabMenu","_step","categoryTags","affiliationTags","tagLabels","_iterator","_step2","_iterator2","array","contains","html","facetSearchTags","_i","_arr","toggle","setupKeywordTag","facetSearchYear","_step3","yearTags","_iterator3","year","parseInt","_step4","_iterator4","sort","reverse","setupYearTag","deparam","search","origin","pathname","tagKey","splice","parameters","param","pushState","ready","colorbox","rel","maxWidth","maxHeight","current","opacity"],"mappings":"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","sourcesContent":["/* global $ */\n\n// 内部リンク\nexport default function internalLink() {\n  if (!document.getElementById('TableOfContents')) return;\n  \n  let itemsOfToc = []; // 目次管理用配列\n\n  createToc(); // 目次の生成\n  setupSmoothScroll(); // 目次をクリックしたらスクロール\n  $(window).on('resize', updateSectionSize).trigger('resize'); // セクションの矩形サイズを更新\n  $(window).on('scroll', updateHighlightingOfToc).trigger('scroll'); // 目次のハイライトを更新\n  // ハッシュが指定されていたら、そこまでスクロール\n  const hash = (window.location.hash.substr(1));\n  if (hash) {\n    const decodedHash = decodeURIComponent(hash);\n    const target = itemsOfToc.filter(item => item.target.id === decodedHash);\n    if (target.length > 0) {\n      $(target[0].elm).trigger('click');\n    }\n  }\n\n\n  // 目次の生成\n  function createToc() {\n    const tocContainer = document.getElementById('TableOfContents');\n    if (tocContainer) {\n      const postContent = document.querySelector('.md-content');\n      const headings = postContent.querySelectorAll('h2, h3, h4');\n      const outline = []; // 階層構造を持った見出しのリスト\n      let currentNode = outline;\n      for (let i = 0; i < headings.length; i++) {\n        const currentHeading = headings[i];\n        //// News Archiveに付与する日付の取得\n        const date = $(headings[i]).next('.news_date').text();\n\n        //// 階層構造を持った見出しのリストの作成\n        switch (currentHeading.tagName) {\n          case 'H2': // 大見出しの場合\n            currentNode = []; // 子の階層を作り、現在操作中の階層にする\n            outline.push({currentHeading: currentHeading, date: date}, currentNode); // 見出しリストに追加\n            break;\n          case 'H3':\n            currentNode.push(currentHeading); // 見出しリストの子の階層に追加\n            break;\n        }\n        \n        //// IDの付与\n        const namedAnchor = currentHeading.querySelector('a[name]');\n        if (namedAnchor) {\n          // 見出しにname属性持ちのアンカーがあれば、name属性をIDに \n          currentHeading.setAttribute('id', namedAnchor.name);\n        } else if (!currentHeading.getAttribute('id')) {\n          // そうでなく、かつ見出しにIDが付与されていなければ、見出し内容をIDに\n          // （ただしどうやらJekyllは自動的にそれをやっているっぽい。だとしたら不要\n          currentHeading.setAttribute('id', currentHeading.textContent.replace(/[\\/\\s]/g, '-'));\n        }\n        //// 見出しにリンク用のアンカーを追加\n        if (currentHeading.tagName === 'H2' || currentHeading.tagName === 'H3') {\n          const anchor = document.createElement('a');\n          currentHeading.appendChild(anchor);\n          anchor.setAttribute('href', '#' + currentHeading.id);\n          anchor.classList.add('link-icon');\n        }\n      }\n      //// 目次のHTMLを作り、DOM生成\n      tocContainer.innerHTML = '<ul>' + outline.map(item => createItemOfToc(item)).join('').replace(/<li><ul><\\/ul><\\/li>/g, '').replace(/<\\/li><li><ul><\\/ul>/g, '<ul>') + '</ul>';\n    }\n    //// 目次管理用の配列作成\n    $('a', tocContainer).each((index, item) => {\n      itemsOfToc.push({\n        elm: item, // 目次の項目\n        target: document.getElementById(item.dataset.target), // 目次の対象の見出し\n        rect: { y: undefined, height: undefined } // 対象の矩形情報（後で生成）\n      })\n    });\n  }\n  // 目次の各項目の生成（再帰処理をしてる）\n  function createItemOfToc(item) {\n    switch (true) {\n      case item.currentHeading !== undefined && item.currentHeading.nodeName !== undefined: // タグの場合、<LI>を追加\n        return '<li><a href=\"#' + item.currentHeading.id + '\" data-target=\"' + item.currentHeading.id + '\">' + item.currentHeading.textContent + '<span class=\"nav_date\">' + item.date + '</span></a></li>';\n      case item.currentHeading !== undefined && item.currentHeading.length !== undefined: // 配列の場合、<UL>を追加し、中身を再帰処理で生成\n        return '<li><ul>' + item.currentHeading.map(subitem => createItemOfToc(subitem)).join('') + '</ul></li>';\n    }\n  }\n\n  // セクションの矩形サイズを更新\n  function updateSectionSize() {\n    const container = document.querySelector('#MainContentView > .md-content');\n    for (let i = 0; i < itemsOfToc.length; i++) { // 目次管理用配列を回す\n      const item = itemsOfToc[i];\n      item.rect.y = item.target.offsetTop;\n      item.rect.height = (i < itemsOfToc.length - 1 ? itemsOfToc[i + 1].target.offsetTop : container.offsetTop + container.clientHeight) - item.rect.y; // 最後の項目でなければ、次の項目のY座標、そうであれば、.md-contentの高さからセクションのサイズを計測\n    }\n    updateHighlightingOfToc();\n  }\n\n  // 目次のハイライトを更新\n  function updateHighlightingOfToc() {\n    const screenTop = window.scrollY;\n    for (let i = 0; i < itemsOfToc.length; i++) { // 目次管理用配列を回す\n      const item = itemsOfToc[i];\n      const rect = intersect({y: screenTop, height: window.innerHeight}, item.rect); // セクションの矩形と、現在表示中の矩形を重ね合わせる\n      if (rect.height > 0) { // 重なり合う領域があればハイライト\n        item.elm.classList.add('current');\n      } else {\n        item.elm.classList.remove('current');\n      }\n    }\n  }\n\n  // 矩形の重ね合わせを計算\n  function intersect(rect1, rect2) {\n    const\n      sy = Math.max(rect1.y, rect2.y),\n      ey = Math.min(rect1.y + rect1.height, rect2.y + rect2.height),\n      h = ey - sy;\n    if (h > 0) {\n      return { y: sy, height: h };\n    }\n    return { y: 0, height: 0 };\n  }\n\n\n  // 目次をクリックしたらスクロール\n  function setupSmoothScroll() {\n    $('#TableOfContents a').on('click', (e) => {\n      history.replaceState('', '', e.delegateTarget.href);\n      const target = document.getElementById(e.delegateTarget.dataset.target);\n      if (target) {\n        $('html').animate({\n          scrollTop: target.offsetTop - 16,\n          duration: 400\n        });\n      }\n      return false;\n    });\n  }\n\n}\n","import internalLink from \"./internalLink\"\nimport accordionMenu from \"./accordionMenu\"\nimport switchAppearance from \"./switchAppearance\"\nimport taggingListView from \"./taggingListView\"\nimport lightBox from \"./lightBox\"\n\nwindow.onload = function () {\n\n  // 内部リンク\n  internalLink();\n  // アコーディオンメニュー\n  accordionMenu();\n  // 外観変更スイッチ\n  switchAppearance();\n  // サービス一覧\n  taggingListView();\n  // ライトボックス\n  lightBox();\n\n}\n","// アコーディオンメニュー\nexport default function accordionMenu() {\n  $('.toggle-content-btn').on('click', function () {\n    const content = $(this).next('.accordion-content')\n    content.slideToggle(500)\n    $(this).toggleClass(\"active\");\n  });\n\n  $('.close-content-btn').click(function () {\n    const content = $(this).parent().parent()\n    content.slideToggle(500)\n    $(this).parent().parent().prev().removeClass(\"active\");\n  });\n}","// 外観変更スイッチ\nexport default function switchAppearance() {\n  const appearanceWwitch = document.querySelector('.appearance-switch');\n  if (appearanceWwitch) {\n    const buttons = appearanceWwitch.querySelectorAll('.button');\n    buttons.forEach(button => {\n      button.addEventListener('click', e => {\n        appearanceWwitch.parentNode.dataset.appearanceType = e.target.dataset.appearanceValue;\n        // ボタンのハイライト切替\n        buttons.forEach(button => {\n          if (button === e.target) {\n            button.classList.add('-current');\n          } else {\n            button.classList.remove('-current');\n          }\n        });\n      });\n    });\n  }\n}","/* global $ */\n\n// サービス一覧\nexport default function taggingListView() {\n\n  const taggingListView = document.querySelector('.tagging-list-view');\n  if (taggingListView) {\n    let taggingItems;\n    const selectedTags = {}, tagViews = {};\n    const facetSearch = document.querySelector('.facet-search');\n\n    Object.defineProperties(selectedTags, {\n      concatenated: {\n        get() {\n          return Object.keys(this).reduce((acc, tags) => acc.concat(this[tags]), []);\n        }\n      },\n      count: {\n        get() {\n          return Object.keys(this).reduce((acc, tags) => acc + this[tags].length, 0);\n        }\n      }\n    });\n\n    sortTaggingList();\n    setupTaggingItems();\n    setupTabMenu();\n    setupKeywordTag();\n    setupYearTag();\n    setupFacetSearch();\n    \n    function sortTaggingList() {\n      console.log(taggingListView.dataset.sortBy)\n      if (taggingListView.dataset.sortBy === 'year') {\n        console.log('sort')\n\n      }\n    }\n\n    function setupTaggingItems() {\n      taggingItems = taggingListView.querySelectorAll('.taggingitem');\n      taggingItems.forEach(item => {\n        item.ddbj_facetsearch_tags = item.dataset.tags.split(',').filter(tag => tag !== '');\n      });\n    }\n\n    /**\n     * タブ切り替え\n     */\n    function setupTabMenu() {\n      const tabMenuView = facetSearch.querySelector(':scope > .tab-menu-view');\n      if (tabMenuView) {\n        const tabMenuItems = tabMenuView.querySelectorAll(':scope > .tabmenucontainer > li');\n        const tabbedContents = tabMenuView.querySelectorAll(':scope > .tabbedcontent');\n        tabMenuItems.forEach(item => {\n          item.target = tabMenuView.querySelector(`:scope > .tabbedcontent[data-tab=\"${item.dataset.tab}\"]`);\n          item.addEventListener('click', () => {\n            // 表示状態の切り替え\n            tabMenuItems.forEach(item => item.classList.remove('-current'));\n            item.classList.add('-current');\n            tabbedContents.forEach(tabbedContent => tabbedContent.classList.remove('-current'));\n            item.target.classList.add('-current');\n          });\n        });\n      }\n    }\n\n    /**\n     * ファセット検索の準備\n     */\n    function setupKeywordTag() {\n      const categoryTags = {}, affiliationTags = {}, tagLabels = {};\n      // タグの収集\n      for (const item of taggingItems) {\n        const tags = item.querySelectorAll('.tag-list-view > .tag-view');\n        for (const tag of tags) {\n          let array;\n          if (tag.classList.contains('-reverse')) {\n            // 所属\n            array = affiliationTags;\n          } else {\n            // カテゴリ\n            array = categoryTags;\n          }\n          if (!array[tag.dataset.tag]) {\n            array[tag.dataset.tag] = [];\n            tagLabels[tag.dataset.tag] = tag.textContent;\n          }\n          array[tag.dataset.tag].push(item);\n        }\n      }\n      // ファセット検索用ビューの生成\n      let html = '';\n      const facetSearchTags = facetSearch.querySelector(':scope .tags[data-tab=\"keyword\"]');\n      for (const tags of [categoryTags, affiliationTags]) {\n        for (const tag in tags) {\n          html += `<li class=\"tag-view${affiliationTags[tag] === undefined ? '' : ' -reverse'}\" data-tag=\"${tag}\"><span class=\"label\">${tagLabels[tag]}</span><span class=\"count\">${tags[tag].length}</span></li>`;\n        }\n      }\n      facetSearchTags.innerHTML = html;\n\n      // アイテムのインタラクション\n      taggingListView.querySelectorAll('.bottom.-collapsed').forEach(elm => {\n        const collapsedbutton = elm.querySelector('.collapsedbutton');\n        collapsedbutton.addEventListener('click', () => {\n          elm.classList.toggle('-opened');\n        });\n      })\n\n    }\n\n    function setupYearTag() {\n      if (facetSearch.dataset.facetSearchYear === 'true') {\n        const yearTags = {};\n        // タグの収集\n        for (const item of taggingItems) {\n          const year = parseInt(item.dataset.year);\n          if (!yearTags[year]) {\n            yearTags[year] = [];\n          }\n          yearTags[year].push(item);\n        }\n        // ファセット検索用ビューの生成\n        let html = '';\n        const facetSearchTags = facetSearch.querySelector(':scope .tags[data-tab=\"year\"]');\n        for (const year of Object.keys(yearTags).sort().reverse()) {\n          html += `<li class=\"tag-view\" data-tag=\"${year}\"><span class=\"label\">${year}</span><span class=\"count\">${yearTags[year].length}</span></li>`;\n        }\n        facetSearchTags.innerHTML = html;\n      }\n    }\n\n    function setupFacetSearch() {\n      const urlParameters = $.deparam(window.location.search.substr(1));\n      const path = window.location.origin + window.location.pathname;\n      Object.keys(urlParameters).forEach(key => selectedTags[key] = urlParameters[key]);\n      const facetSearchTags = facetSearch.querySelectorAll(':scope .tags');\n      facetSearchTags.forEach(tags => {\n        const tagKey = tags.dataset.tab;\n        if (selectedTags[tagKey] === undefined) {\n          selectedTags[tagKey] = [];\n        }\n        tagViews[tagKey] = tags.querySelectorAll('.tag-view');\n        tagViews[tagKey].forEach(tagView => tagView.addEventListener('click', () => {\n          const tag = tagView.dataset.tag;\n          // 選択中のタグに追加・削除\n          if (selectedTags[tagKey].indexOf(tag) === -1) {\n            if (tagKey === 'year') {\n              // 'year' であれば排他的\n              selectedTags[tagKey] = [tag];\n            } else {\n              selectedTags[tagKey].push(tag);\n            }\n          } else {\n            selectedTags[tagKey].splice(selectedTags[tagKey].indexOf(tag), 1);\n          }\n          // URLパラメータにセット\n          const parameters = selectedTags.count ? `?${ $.param(selectedTags) }` : '';\n          window.history.pushState(selectedTags, '', `${ path }${ parameters }`);\n          updateTag();\n        }));\n      });\n      updateTag();\n    }\n\n    // アイテムの表示更新\n    function updateTag() {\n      if (selectedTags.count) {\n        // 何か選択されている場合、選択されているもののみ表示\n        for (const key in tagViews) {\n          tagViews[key].forEach(tagView => {\n            if (selectedTags[key].indexOf(tagView.dataset.tag) === -1) {\n              tagView.classList.add('-disable');\n            } else {\n              tagView.classList.remove('-disable');\n            }\n          });\n        }\n        const concatenatedSelectedTags = selectedTags.concatenated;\n        for (const taggingItem of taggingItems) {\n          let isHidden = false;\n          for (const selectedTag of concatenatedSelectedTags) {\n            if (taggingItem.ddbj_facetsearch_tags.indexOf(selectedTag) === -1) {\n              isHidden = true;\n              break;\n            }\n          }\n          if (isHidden) {\n            taggingItem.classList.add('-hidden');\n          } else {\n            taggingItem.classList.remove('-hidden');\n          }\n        }\n      } else {\n        // 無選択の場合、全部選択\n        for (const key in tagViews) {\n          tagViews[key].forEach(tagView => tagView.classList.add('-disable'));\n        }\n        taggingItems.forEach(taggingItem => taggingItem.classList.remove('-hidden'));\n      }\n    }\n  \n  }\n\n}","// ライトボックス\nexport default function lightBox() {\n  $(document).ready(function () {\n    $(\".group1\").colorbox({ rel: 'group1', maxWidth: \"90%\", maxHeight: \"90%\", current: '{current} / {total}', opacity: 1 });\n  });\n\n}\n"]}