{"version":3,"sources":["../../_javascript/internalLink.js","../../_javascript/main.js","../../_javascript/accordionMenu.js","../../_javascript/switchAppearance.js","../../_javascript/servicesView.js","../../_javascript/lightBox.js"],"names":["internalLink","$navLink","contentsArr","Array","currentCheck","windowScrolltop","$","window","scrollTop","i","length","removeClass","eq","addClass","on","Promise","resolve","reject","indexWrap","document","querySelector","hTags","querySelectorAll","indexList","createElement","listSrc","subListSrc","theHeading","id","setAttribute","a","appendChild","classList","add","tagName","textContent","innerHTML","outerHTML","createIndex","then","targetContents","attr","charAt","targetContentsTop","offset","top","targetContentsBottom","outerHeight","createContentsArr","console","log","param","location","hash","match","getElementById","slice","scrollIntoView","behavior","inline","history","replaceState","this","href","animate","catch","error","onload","next","slideToggle","toggleClass","click","parents","slideUp","appearanceWwitch","buttons","forEach","button","addEventListener","e","parentNode","dataset","appearanceType","target","appearanceValue","remove","switchAppearance","servicesView_","_step","categoryTags","affiliationTags","services","_iterator","_createForOfIteratorHelper","s","n","done","_step3","service","value","_iterator3","tag","array","contains","push","err","f","html","facetSearchTags","Object","keys","map","concat","join","selectedTags","$selectedTags","indexOf","splice","each","index","elm","_step2","_iterator2","isHidden","tags","from","_i","_tags","servicesView","ready","colorbox","rel","maxWidth","maxHeight","current","opacity"],"mappings":"yBAGe,SAASA,IACtB,IAAIC,EAAW,GAyDXC,EAAc,IAAIC,MAmBtB,SAASC,IAGP,IADA,IAAIC,EAAkBC,EAAEC,QAAQC,YACvBC,EAAI,EAAGA,EAAIP,EAAYQ,OAAQD,IAAK,CAE3C,GAAKP,EAAY,GAAG,GAAKG,EAAkB,CACzCJ,EAASU,YAAY,WACrBV,EAASW,GAAG,GAAGC,SAAS,WACxB,MAEAX,EAAYO,GAAG,IAAMJ,GACrBH,EAAYO,GAAG,IAAMJ,IAGrBJ,EAASU,YAAY,WACrBV,EAASW,GAAGH,GAAGI,SAAS,aAO9BP,EAAEC,QAAQO,GAAG,UAAU,WACrBV,OAiBY,IAAIW,SAAQ,SAACC,EAASC,IAlHhB,WAClB,IAAMC,EAAYC,SAASC,cAAc,kBACzC,GAAIF,EAAW,CACb,IACMG,EADcF,SAASC,cAAc,eACjBE,iBAAiB,UAC3C,GAAID,EAAMX,OAAS,EAAG,CAIpB,IAHA,IAAIa,EAAYJ,SAASK,cAAc,MACnCC,EAAU,GACVC,EAAa,GACRjB,EAAI,EAAGA,EAAIY,EAAMX,OAAQD,IAAK,CACrC,IAAIkB,EAAaN,EAAMZ,GACjBmB,EAAK,WAAanB,EACxBkB,EAAWE,aAAa,KAAMD,GAE9B,IAAME,EAAIX,SAASK,cAAc,KACjCG,EAAWI,YAAYD,GACvBA,EAAED,aAAa,OAAO,IAAMD,GAC5BE,EAAEE,UAAUC,IAAI,aACW,OAAvBN,EAAWO,SACM,KAAfR,IAEFD,GAAW,OAASC,EAAa,QACjCA,EAAa,IAEfD,GACE,8BACAhB,EACA,KACAkB,EAAWQ,YACX,QAC8B,OAAvBR,EAAWO,UACpBR,GACE,yBACAjB,EACA,KACAkB,EAAWQ,YACX,aAMJV,GAFiB,KAAfC,EAES,OAASA,EAAa,aAEtB,QAEbH,EAAUa,UAAYX,EAEtBP,EAAUkB,UAAYb,EAAUc,WAGpCpC,EAAWK,EAAE,yBAgEbgC,GACAtB,OAKCuB,MAAK,YAjEkB,WACxB,IAAK,IAAI9B,EAAI,EAAGA,EAAIR,EAASS,OAAQD,IAAK,CAExC,IAAI+B,EAAiBvC,EAASW,GAAGH,GAAGgC,KAAK,QAEzC,GAAgC,KAA5BD,EAAeE,OAAO,GAAW,CAEnC,IAAIC,EAAoBrC,EAAEkC,GAAgBI,SAASC,IAE/CC,EACFH,EAAoBrC,EAAEkC,GAAgBO,aAAY,GAAQ,EAE5D7C,EAAYO,GAAK,CAACkC,EAAmBG,KAsDvCE,GACA5C,IACA6C,QAAQC,IAAI,0BACXX,MAAK,WACNU,QAAQC,IAAI,cAEZ,IAAIC,EAAQC,SAASC,KAEjBF,EAAMG,MAAM,MAEAnC,SAASoC,eAAeJ,EAAMK,MAAM,IAC1CC,eAAe,CACrBC,SAAU,SACVC,OAAQ,eAGXpB,MAAK,WApCRtC,EAASa,GAAG,SAAS,WAQnB,OAPA8C,QAAQC,aAAa,GAAI,GAAIC,KAAKC,MAClCzD,EAAE,aAAa0D,QACb,CACExD,UAAWF,EAAEA,EAAEwD,MAAMrB,KAAK,SAASG,SAASC,IAAM,IAEpD,MAEK,QA8BNoB,OAAM,SAACC,GAERjB,QAAQiB,MAAMA,09BC/IpB3D,OAAO4D,OAAS,WAGdnE,ICNAM,EAAE,sBAAsBQ,GAAG,SAAS,WAElCR,EAAEwD,MACCM,KAAK,MACLC,YAAY,KACf/D,EAAEwD,MAAMQ,YAAY,aAGtBhE,EAAE,cAAciE,OAAM,WACpBjE,EAAEwD,MAAMU,QAAQ,sBAAsBC,UACtCnE,EAAEwD,MAAMnD,YAAY,aCXT,WACb,IAAM+D,EAAmBvD,SAASC,cAAc,sBAChD,GAAIsD,EAAkB,CACpB,IAAMC,EAAUD,EAAiBpD,iBAAiB,WAClDqD,EAAQC,SAAQ,SAAAC,GACdA,EAAOC,iBAAiB,SAAS,SAAAC,GAC/BL,EAAiBM,WAAWC,QAAQC,eAAiBH,EAAEI,OAAOF,QAAQG,gBAEtET,EAAQC,SAAQ,SAAAC,GACVA,IAAWE,EAAEI,OACfN,EAAO7C,UAAUC,IAAI,YAErB4C,EAAO7C,UAAUqD,OAAO,sBFDlCC,GGTa,WACb,IAAMC,EAAgBpE,SAASoC,eAAe,gBAC9C,GAAIgC,EAAe,CAEjB,IAFiBC,EAEXC,EAAe,GAAIC,EAAkB,GACrCC,EAAWJ,EAAcjE,iBAAiB,YAH/BsE,EAAAC,EAIKF,GAJL,IAIjB,IAAAC,EAAAE,MAAAN,EAAAI,EAAAG,KAAAC,MAAgC,CAAA,IAAAC,EAArBC,EAAqBV,EAAAW,MAAAC,EAAAP,EACjBK,EAAQ5E,iBAAiB,yBADR,IAE9B,IAAA8E,EAAAN,MAAAG,EAAAG,EAAAL,KAAAC,MAAwB,CAAA,IAAbK,EAAaJ,EAAAE,MAClBG,OAAK,GAGPA,EAFED,EAAIrE,UAAUuE,SAAS,YAEjBb,EAGAD,GAECY,EAAIpB,QAAQoB,OACrBC,EAAMD,EAAIpB,QAAQoB,KAAO,IAE3BC,EAAMD,EAAIpB,QAAQoB,KAAKG,KAAKN,IAdA,MAAAO,GAAAL,EAAArB,EAAA0B,GAAA,QAAAL,EAAAM,MAJf,MAAAD,GAAAb,EAAAb,EAAA0B,GAAA,QAAAb,EAAAc,IAsBjB,IAAIC,EAAO,GACLC,EAAkBzF,SAASC,cAAc,yBAC/CuF,GAAQE,OAAOC,KAAKrB,GAAcsB,KAAI,SAAAV,GAAG,MAAA,qCAAAW,OAAyCX,EAAzC,MAAAW,OAAiDX,EAAjD,wBAAAW,OAA2EvB,EAAaY,GAAK3F,OAA7F,mBAAmHuG,KAAK,IACjKN,GAAQE,OAAOC,KAAKpB,GAAiBqB,KAAI,SAAAV,GAAG,MAAA,8CAAAW,OAAkDX,EAAlD,MAAAW,OAA0DX,EAA1D,wBAAAW,OAAoFtB,EAAgBW,GAAK3F,OAAzG,mBAA+HuG,KAAK,IAChLL,EAAgBxE,UAAYuE,EAE5B,IAAMO,EAAe,GACfC,EAAgB7G,EAAE,eAAgBsG,GACxCO,EAAcrG,GAAG,SAAS,SAAAiE,GACxB,IAAMsB,EAAMtB,EAAEI,OAAOF,QAAQoB,IAO7B,IALmC,IAA/Ba,EAAaE,QAAQf,GACvBa,EAAaV,KAAKH,GAElBa,EAAaG,OAAOH,EAAaE,QAAQf,GAAM,GAE7Ca,EAAaxG,OAAQ,CAEvByG,EAAcG,MAAK,SAACC,EAAOC,IACsB,IAA3CN,EAAaE,QAAQI,EAAIvC,QAAQoB,KACnCmB,EAAIxF,UAAUC,IAAI,YAElBuF,EAAIxF,UAAUqD,OAAO,eANF,IAAAoC,EAAAC,EAAA7B,EASDF,GATC,IASvB,IAAA+B,EAAA5B,MAAA2B,EAAAC,EAAA3B,KAAAC,MAAgC,CAG9B,IAH8B,IAArBE,EAAqBuB,EAAAtB,MAC1BwB,GAAW,EACTC,EAAOzH,MAAM0H,KAAK3B,EAAQ5E,iBAAiB,yBAAyB,SAAA+E,GAAG,OAAIA,EAAIpB,QAAQoB,OAC7FyB,EAAA,EAAAC,EAAkBH,EAAlBE,EAAAC,EAAArH,OAAAoH,IAAwB,CAAnB,IAAMzB,EAAG0B,EAAAD,GACZ,IAAmC,IAA/BZ,EAAaE,QAAQf,GAAa,CACpCsB,GAAW,EACX,OAGAA,EACFzB,EAAQlE,UAAUC,IAAI,WAEtBiE,EAAQlE,UAAUqD,OAAO,YArBN,MAAAoB,GAAAiB,EAAA3C,EAAA0B,GAAA,QAAAiB,EAAAhB,UA0BvBS,EAAcG,MAAK,SAACC,EAAOC,GAAR,OAAgBA,EAAIxF,UAAUqD,OAAO,eACxDM,EAASf,SAAQ,SAAAsB,GAAO,OAAIA,EAAQlE,UAAUqD,OAAO,kBHxD3D2C,GIZA1H,EAAEa,UAAU8G,OAAM,WAChB3H,EAAE,WAAW4H,SAAS,CAAEC,IAAK,SAAUC,SAAU,MAAOC,UAAW,MAAOC,QAAS,sBAAuBC,QAAS","sourcesContent":["/* global $ */\n\n// 内部リンク\nexport default function internalLink() {\n  let $navLink = \"\";\n\n  const createIndex = () => {\n    const indexWrap = document.querySelector(\".internal-link\"); //H2タグの前に挿入したdivタグ\n    if (indexWrap) {\n      const postContent = document.querySelector(\".md-content\"); //記事本文が書かれているラッパー\n      const hTags = postContent.querySelectorAll(\"h2, h3\"); //記事内のH2とH3タグを全て取得\n      if (hTags.length > 0) {\n        let indexList = document.createElement(\"ul\");\n        let listSrc = \"\";\n        let subListSrc = \"\"; //h3タグを取得しておくための変数\n        for (let i = 0; i < hTags.length; i++) {\n          let theHeading = hTags[i];\n          const id = \"index_id\" + i;\n          theHeading.setAttribute(\"id\", id); //リンクで飛べるようにIDをつける\n          //ここのid名がhref属性に指定されているaタグをh2、もしくはh3の後に挿入\n          const a = document.createElement('a');\n          theHeading.appendChild(a);\n          a.setAttribute(\"href\",\"#\" + id);\n          a.classList.add(\"link-icon\");\n          if (theHeading.tagName === \"H2\") {\n            if (subListSrc !== \"\") {\n              //h3リストが生成されていれば\n              listSrc += \"<ul>\" + subListSrc + \"</ul>\";\n              subListSrc = \"\";\n            }\n            listSrc +=\n              '</li><li><a href=\"#index_id' +\n              i +\n              '\">' +\n              theHeading.textContent +\n              \"</a>\";\n          } else if (theHeading.tagName === \"H3\") {\n            subListSrc +=\n              '<li><a href=\"#index_id' +\n              i +\n              '\">' +\n              theHeading.textContent +\n              \"</a></li>\";\n          }\n        }\n\n        if (subListSrc !== \"\") {\n          //最後のリストがh3だった場合\n          listSrc += \"<ul>\" + subListSrc + \"</ul></li>\";\n        } else {\n          listSrc += \"</li>\";\n        }\n        indexList.innerHTML = listSrc;\n        //indexWrap.appendChild(indexList);\n        indexWrap.innerHTML = indexList.outerHTML;\n      }\n    }\n    $navLink = $(\"#TableOfContents li a\");\n  };\n\n  // 各コンテンツのページ上部からの開始位置と終了位置を配列に格納しておく\n  let contentsArr = new Array();\n  const createContentsArr = () => {\n    for (let i = 0; i < $navLink.length; i++) {\n      // コンテンツのIDを取得\n      let targetContents = $navLink.eq(i).attr(\"href\");\n      // ページ内リンクでないナビゲーションが含まれている場合は除外する\n      if (targetContents.charAt(0) == \"#\") {\n        // ページ上部からコンテンツの開始位置までの距離を取得\n        let targetContentsTop = $(targetContents).offset().top;\n        // ページ上部からコンテンツの終了位置までの距離を取得\n        let targetContentsBottom =\n          targetContentsTop + $(targetContents).outerHeight(true) - 1;\n        // 配列に格納\n        contentsArr[i] = [targetContentsTop, targetContentsBottom];\n      }\n    }\n  };\n\n  // 現在地をチェックする\n  function currentCheck() {\n    // 現在のスクロール位置を取得\n    let windowScrolltop = $(window).scrollTop();\n    for (let i = 0; i < contentsArr.length; i++) {\n      // 現在のスクロール位置が、配列に格納した開始位置と終了位置の間にあるものを調べる\n      if ( contentsArr[0][0] > windowScrolltop ) {\n        $navLink.removeClass(\"current\");\n        $navLink.eq(0).addClass(\"current\");\n        break;\n      } else if (\n        contentsArr[i][0] <= windowScrolltop &&\n        contentsArr[i][1] >= windowScrolltop\n      ) {\n        // 開始位置と終了位置の間にある場合、ナビゲーションにclass=\"current\"をつける\n        $navLink.removeClass(\"current\");\n        $navLink.eq(i).addClass(\"current\");\n        i == contentsArr.length;\n      }\n    }\n  }\n\n  // ページ読み込み時とスクロール時に、現在地をチェックする\n  $(window).on(\"scroll\", function () {\n    currentCheck();\n  });\n\n  // ナビゲーションクリック時の動作：スムーズスクロール・アドレスバーにID付与\n  const smoothScroll = () => {\n    $navLink.on(\"click\", function () {\n      history.replaceState(\"\", \"\", this.href);\n      $(\"html,body\").animate(\n        {\n          scrollTop: $($(this).attr(\"href\")).offset().top - 24,\n        },\n        400\n      );\n      return false;\n    });\n  };\n\n  let promise = new Promise((resolve, reject) => {\n    createIndex();\n    resolve();\n  });\n\n  promise\n    \n    .then(() => {\n      createContentsArr();\n      currentCheck();\n      console.log(\"createContentsArr完了\");\n    }).then(() => {\n      console.log(\"パラメーター確認開始\");\n      // URLパラメータ文字列を取得\n      let param = location.hash;\n      // 変数paramに#がついていれば\n      if (param.match('#')) {\n        // その#の位置に移動\n        let element = document.getElementById(param.slice(1));\n        element.scrollIntoView({\n          behavior: \"smooth\",\n          inline: \"nearest\",\n        });\n      }\n    }).then(() => {\n      smoothScroll();\n    }).catch((error) => {\n      // エラーハンドリング\n      console.error(error);\n    });\n    \n}","import internalLink from \"./internalLink\"\nimport accordionMenu from \"./accordionMenu\"\nimport switchAppearance from \"./switchAppearance\"\nimport servicesView from \"./servicesView\"\nimport lightBox from \"./lightBox\"\nwindow.onload = function () {\n\n  // 内部リンク\n  internalLink();\n  // アコーディオンメニュー\n  accordionMenu();\n  // 外観変更スイッチ\n  switchAppearance();\n  // サービス一覧\n  servicesView();\n  // ライトボックス\n  lightBox();\n\n}\n","// アコーディオンメニュー\nexport default function accordionMenu() {\n  $('.accordion-menu dt').on('click', function () {\n\n    $(this)\n      .next('dd')\n      .slideToggle(500);\n    $(this).toggleClass(\"active\");\n  });\n\n  $('.close-btn').click(function () {\n    $(this).parents('.accordion-menu dd').slideUp();\n    $(this).removeClass(\"active\");\n  });\n}","// 外観変更スイッチ\nexport default function switchAppearance() {\n  const appearanceWwitch = document.querySelector('.appearance-switch');\n  if (appearanceWwitch) {\n    const buttons = appearanceWwitch.querySelectorAll('.button');\n    buttons.forEach(button => {\n      button.addEventListener('click', e => {\n        appearanceWwitch.parentNode.dataset.appearanceType = e.target.dataset.appearanceValue;\n        // ボタンのハイライト切替\n        buttons.forEach(button => {\n          if (button === e.target) {\n            button.classList.add('-current');\n          } else {\n            button.classList.remove('-current');\n          }\n        });\n      });\n    });\n  }\n}","/* global $ */\n\n// サービス一覧\nexport default function servicesView() {\n  const servicesView_ = document.getElementById('ServicesView');\n  if (servicesView_) {\n    // タグの収集\n    const categoryTags = {}, affiliationTags = {};\n    const services = servicesView_.querySelectorAll('.service')\n    for (const service of services) {\n      const tags = service.querySelectorAll('.tags > .service-tag');\n      for (const tag of tags) {\n        let array;\n        if (tag.classList.contains('-reverse')) {\n          // 所属\n          array = affiliationTags;\n        } else {\n          // カテゴリ\n          array = categoryTags;\n        }\n        if (!array[tag.dataset.tag]) {\n          array[tag.dataset.tag] = [];\n        }\n        array[tag.dataset.tag].push(service);\n      }\n    }\n    // ファセット検索用ビューの生成\n    let html = '';\n    const facetSearchTags = document.querySelector('.facet-search > .tags');\n    html += Object.keys(categoryTags).map(tag => `<li class=\"service-tag\" data-tag=\"${tag}\">${tag}<span class=\"count\">${categoryTags[tag].length}</span></li>`).join('');\n    html += Object.keys(affiliationTags).map(tag => `<li class=\"service-tag -reverse\" data-tag=\"${tag}\">${tag}<span class=\"count\">${affiliationTags[tag].length}</span></li>`).join('');\n    facetSearchTags.innerHTML = html;\n    // インタラクション\n    const selectedTags = [];\n    const $selectedTags = $('.service-tag', facetSearchTags);\n    $selectedTags.on('click', e => {\n      const tag = e.target.dataset.tag;\n      // 選択中のタグに追加・削除\n      if (selectedTags.indexOf(tag) === -1) {\n        selectedTags.push(tag);\n      } else {\n        selectedTags.splice(selectedTags.indexOf(tag), 1);\n      }\n      if (selectedTags.length) {\n        // 何か選択されている場合、選択されているもののみ表示\n        $selectedTags.each((index, elm) => {\n          if (selectedTags.indexOf(elm.dataset.tag) === -1) {\n            elm.classList.add('-disable');\n          } else {\n            elm.classList.remove('-disable');\n          }\n        });\n        for (const service of services) {\n          let isHidden = true;\n          const tags = Array.from(service.querySelectorAll('.tags > .service-tag'), tag => tag.dataset.tag);\n          for (const tag of tags) {\n            if (selectedTags.indexOf(tag) !== -1) {\n              isHidden = false;\n              break;\n            }\n          }\n          if (isHidden) {\n            service.classList.add('-hidden');\n          } else {\n            service.classList.remove('-hidden');\n          }\n        }\n      } else {\n        // 無選択の場合、全部選択\n        $selectedTags.each((index, elm) => elm.classList.remove('-disable'));\n        services.forEach(service => service.classList.remove('-hidden'));\n      }\n    });\n\n  }\n}","// アコーディオンメニュー\nexport default function lightBox() {\n  $(document).ready(function () {\n    $(\".group1\").colorbox({ rel: 'group1', maxWidth: \"90%\", maxHeight: \"90%\", current: '{current} / {total}', opacity: 1 });\n  });\n\n}\n"]}