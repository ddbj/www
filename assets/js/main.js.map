{"version":3,"sources":["webpack://epoint-js/./_javascript/taggingListView.js","webpack://epoint-js/./_javascript/main.js","webpack://epoint-js/./_javascript/internalLink.js","webpack://epoint-js/./_javascript/accordionMenu.js","webpack://epoint-js/./_javascript/switchAppearance.js","webpack://epoint-js/./_javascript/lightBox.js"],"names":["MSEC_TO_DATE","window","onload","document","getElementById","itemsOfToc","tocContainer","headings","querySelector","querySelectorAll","i","length","currentHeading","namedAnchor","setAttribute","name","getAttribute","textContent","replace","tagName","anchor","createElement","appendChild","id","classList","add","innerHTML","map","heading","date","$","next","newHeading","clone","children","remove","text","join","each","index","item","push","elm","target","dataset","rect","y","undefined","height","createToc","on","e","history","replaceState","delegateTarget","href","animate","scrollTop","offsetTop","duration","container","clientHeight","updateHighlightingOfToc","trigger","hash","location","substr","decodedHash","decodeURIComponent","filter","screenTop","scrollY","intersect","innerHeight","rect1","rect2","sy","Math","max","h","min","internalLink","this","slideToggle","toggleClass","click","parent","prev","removeClass","appearanceWwitch","buttons","forEach","button","addEventListener","parentNode","appearanceType","appearanceValue","switchAppearance","taggingListView","taggingItems","selectedTags","tagViews","facetSearch","switchButton","updateTag","count","key","tagView","indexOf","tag","concatenatedSelectedTags","concatenated","taggingItem","isHidden","selectedTag","ddbj_facetsearch_tags","prepend","console","log","toggle","Object","defineProperties","keys","reduce","acc","tags","concat","split","sortBy","futureDate","parseInt","Date","getTime","time","style","order","sortTaggingList","categoryTags","affiliationTags","tagLabels","array","contains","html","facetSearchTags","setupKeywordTag","facetSearchYear","yearTags","year","sort","reverse","setupYearTag","urlParameters","deparam","search","path","origin","pathname","tagKey","tab","splice","serialized","pushState","setupFacetSearch","tabMenuView","tabMenuItems","tabbedContents","tabbedContent","dispatchEvent","Event","setupTabMenu","ready","closeText","attr","colorbox","rel","maxWidth","maxHeight","current","opacity","close","closeButton"],"mappings":"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","file":"main.js","sourcesContent":["/* global $ */\n\nconst MSEC_TO_DATE = 1 / 1000 / 60 / 60 / 24;\n\n// サービス一覧\nexport default function taggingListView() {\n\n  const taggingListView = document.querySelector('.tagging-list-view');\n  if (taggingListView) {\n    let taggingItems;\n    const selectedTags = {}, tagViews = {};\n    const facetSearch = document.querySelector('.facet-search');\n    const switchButton = document.createElement('div');\n    switchButton.classList.add('spdisplayswitchbutton');\n    switchButton.textContent = 'Filters';\n    facetSearch.prepend(switchButton);\n    switchButton.addEventListener('click', (e) => {\n      console.log(e)\n      facetSearch.classList.toggle('-shown');\n    });\n\n    Object.defineProperties(selectedTags, {\n      concatenated: {\n        get() {\n          return Object.keys(this).reduce((acc, tags) => acc.concat(this[tags]), []);\n        }\n      },\n      count: {\n        get() {\n          return Object.keys(this).reduce((acc, tags) => acc + this[tags].length, 0);\n        }\n      }\n    });\n\n    setupTaggingItems();\n    sortTaggingList();\n    setupKeywordTag();\n    setupYearTag();\n    setupFacetSearch();\n    setupTabMenu();\n    \n    function setupTaggingItems() {\n      taggingItems = taggingListView.querySelectorAll('.taggingitem');\n      taggingItems.forEach(item => {\n        item.ddbj_facetsearch_tags = item.dataset.tags.split(',').filter(tag => tag !== '');\n      });\n    }\n\n    function sortTaggingList() {\n      if (taggingListView.dataset.sortBy === 'date') {\n        const futureDate = parseInt(new Date('2100-1-1').getTime() * MSEC_TO_DATE);\n        taggingItems.forEach(item => {\n          const time = item.querySelector(':scope > .upper > .tag-list-view > .date > time');\n          item.style.order = futureDate - parseInt(new Date(time.getAttribute('datetime')).getTime() * MSEC_TO_DATE);\n        });\n      }\n    }\n\n    /**\n     * タブ切り替え\n     */\n    function setupTabMenu() {\n      const tabMenuView = facetSearch.querySelector(':scope > .tab-menu-view');\n      if (tabMenuView) {\n        const tabMenuItems = tabMenuView.querySelectorAll(':scope > .tabmenucontainer > li');\n        const tabbedContents = tabMenuView.querySelectorAll(':scope > .tabbedcontent');\n        tabMenuItems.forEach(item => {\n          item.target = tabMenuView.querySelector(`:scope > .tabbedcontent[data-tab=\"${item.dataset.tab}\"]`);\n          item.addEventListener('click', () => {\n            // 表示状態の切り替え\n            tabMenuItems.forEach(item => item.classList.remove('-current'));\n            item.classList.add('-current');\n            tabbedContents.forEach(tabbedContent => tabbedContent.classList.remove('-current'));\n            item.target.classList.add('-current');\n          });\n        });\n        // デフォルトのタブ\n        if (selectedTags.tag.length === 0 && selectedTags.year.length > 0) {\n          tabMenuView.querySelector('li[data-tab=\"year\"]').dispatchEvent(new Event('click'));\n        }\n      }\n    }\n\n    /**\n     * ファセット検索の準備\n     */\n    function setupKeywordTag() {\n      const categoryTags = {}, affiliationTags = {}, tagLabels = {};\n      // タグの収集\n      for (const item of taggingItems) {\n        const tags = item.querySelectorAll('.tag-list-view > .tag-view');\n        for (const tag of tags) {\n          let array;\n          if (tag.classList.contains('-reverse')) {\n            // 所属\n            array = affiliationTags;\n          } else {\n            // カテゴリ\n            array = categoryTags;\n          }\n          if (!array[tag.dataset.tag]) {\n            array[tag.dataset.tag] = [];\n            tagLabels[tag.dataset.tag] = tag.textContent;\n          }\n          array[tag.dataset.tag].push(item);\n        }\n      }\n      // ファセット検索用ビューの生成\n      let html = '';\n      const facetSearchTags = facetSearch.querySelector(':scope .tags[data-tab=\"tag\"]');\n      for (const tags of [categoryTags, affiliationTags]) {\n        for (const tag in tags) {\n          html += `<li class=\"tag-view${affiliationTags[tag] === undefined ? '' : ' -reverse'}\" data-tag=\"${tag}\"><span class=\"label\">${tagLabels[tag]}</span><span class=\"count\">${tags[tag].length}</span></li>`;\n        }\n      }\n      facetSearchTags.innerHTML = html;\n\n      // アイテムのインタラクション\n      taggingListView.querySelectorAll('.bottom.-collapsed').forEach(elm => {\n        const collapsedbutton = elm.querySelector('.collapsedbutton');\n        collapsedbutton.addEventListener('click', () => {\n          elm.classList.toggle('-opened');\n        });\n      })\n\n    }\n\n    function setupYearTag() {\n      if (facetSearch.dataset.facetSearchYear === 'true') {\n        const yearTags = {};\n        // タグの収集\n        for (const item of taggingItems) {\n          const year = parseInt(item.dataset.year);\n          if (!yearTags[year]) {\n            yearTags[year] = [];\n          }\n          yearTags[year].push(item);\n        }\n        // ファセット検索用ビューの生成\n        let html = '';\n        const facetSearchTags = facetSearch.querySelector(':scope .tags[data-tab=\"year\"]');\n        for (const year of Object.keys(yearTags).sort().reverse()) {\n          html += `<li class=\"tag-view\" data-tag=\"${year}\"><span class=\"label\">${year}</span><span class=\"count\">${yearTags[year].length}</span></li>`;\n        }\n        facetSearchTags.innerHTML = html;\n      }\n    }\n\n    function setupFacetSearch() {\n      const urlParameters = $.deparam(window.location.search.substr(1));\n      const path = window.location.origin + window.location.pathname;\n      Object.keys(urlParameters).forEach(key => selectedTags[key] = urlParameters[key].split(','));\n      const facetSearchTags = facetSearch.querySelectorAll(':scope .tags');\n      facetSearchTags.forEach(tags => {\n        const tagKey = tags.dataset.tab;\n        if (selectedTags[tagKey] === undefined) {\n          selectedTags[tagKey] = [];\n        }\n        tagViews[tagKey] = tags.querySelectorAll('.tag-view');\n        tagViews[tagKey].forEach(tagView => tagView.addEventListener('click', () => {\n          const tag = tagView.dataset.tag;\n          // 選択中のタグに追加・削除\n          if (selectedTags[tagKey].indexOf(tag) === -1) {\n            if (tagKey === 'year') {\n              // 'year' であれば排他的\n              selectedTags[tagKey] = [tag];\n            } else {\n              selectedTags[tagKey].push(tag);\n            }\n          } else {\n            selectedTags[tagKey].splice(selectedTags[tagKey].indexOf(tag), 1);\n          }\n          // URLパラメータにセット\n          const serialized = Object.keys(selectedTags).filter(key => selectedTags[key].length > 0).map( key => `${key}=${selectedTags[key].map(tag => tag)}` ).join('&');\n          window.history.pushState(selectedTags, '', `${ path }${ selectedTags.count ? `?${serialized}` : '' }`);\n          updateTag();\n        }));\n      });\n      updateTag();\n    }\n\n    // アイテムの表示更新\n    function updateTag() {\n      if (selectedTags.count) {\n        // 何か選択されている場合、選択されているもののみ表示\n        for (const key in tagViews) {\n          tagViews[key].forEach(tagView => {\n            if (selectedTags[key].indexOf(tagView.dataset.tag) === -1) {\n              tagView.classList.add('-disable');\n            } else {\n              tagView.classList.remove('-disable');\n            }\n          });\n        }\n        const concatenatedSelectedTags = selectedTags.concatenated;\n        for (const taggingItem of taggingItems) {\n          let isHidden = false;\n          for (const selectedTag of concatenatedSelectedTags) {\n            if (taggingItem.ddbj_facetsearch_tags.indexOf(selectedTag) === -1) {\n              isHidden = true;\n              break;\n            }\n          }\n          if (isHidden) {\n            taggingItem.classList.add('-hidden');\n          } else {\n            taggingItem.classList.remove('-hidden');\n          }\n        }\n      } else {\n        // 無選択の場合、全部選択\n        for (const key in tagViews) {\n          tagViews[key].forEach(tagView => tagView.classList.add('-disable'));\n        }\n        taggingItems.forEach(taggingItem => taggingItem.classList.remove('-hidden'));\n      }\n    }\n  \n  }\n\n}","import internalLink from \"./internalLink\"\nimport accordionMenu from \"./accordionMenu\"\nimport switchAppearance from \"./switchAppearance\"\nimport taggingListView from \"./taggingListView\"\nimport lightBox from \"./lightBox\"\n\nwindow.onload = function () {\n\n  // 内部リンク\n  internalLink();\n  // アコーディオンメニュー\n  accordionMenu();\n  // 外観変更スイッチ\n  switchAppearance();\n  // サービス一覧\n  taggingListView();\n  // ライトボックス\n  lightBox();\n\n}\n","/* global $ */\n\n// 内部リンク\nexport default function internalLink() {\n  if (!document.getElementById('TableOfContents')) return;\n\n  let itemsOfToc = []; // 目次管理用配列\n\n  createToc(); // 目次の生成\n  setupSmoothScroll(); // 目次をクリックしたらスクロール\n  $(window).on('resize', updateSectionSize).trigger('resize'); // セクションの矩形サイズを更新\n  $(window).on('scroll', updateHighlightingOfToc).trigger('scroll'); // 目次のハイライトを更新\n  // ハッシュが指定されていたら、そこまでスクロール\n  const hash = window.location.hash.substr(1);\n  if (hash) {\n    const decodedHash = decodeURIComponent(hash);\n    const target = itemsOfToc.filter(item => item.target.id === decodedHash);\n    if (target.length > 0) {\n      $(target[0].elm).trigger('click');\n    }\n  }\n\n\n  // 目次の生成\n  function createToc() {\n    const tocContainer = document.getElementById('TableOfContents');\n    if (tocContainer) {\n      const postContent = document.querySelector('.md-content');\n      // const headings = postContent.querySelectorAll('h2, h3, h4');\n      const headings = postContent.querySelectorAll('h2, h3');\n\n      for (let i = 0; i < headings.length; i++) {\n        const currentHeading = headings[i];\n        //// IDの付与\n        const namedAnchor = currentHeading.querySelector('a[name]');\n        if (namedAnchor) {\n          // 見出しにname属性持ちのアンカーがあれば、name属性をIDに \n          currentHeading.setAttribute('id', namedAnchor.name);\n        } else if (!currentHeading.getAttribute('id')) {\n          // そうでなく、かつ見出しにIDが付与されていなければ、見出し内容をIDに\n          // （ただしどうやらJekyllは自動的にそれをやっているっぽい。だとしたら不要\n          currentHeading.setAttribute('id', currentHeading.textContent.replace(/[\\/\\s]/g, '-'));\n        }\n        //// 見出しにリンク用のアンカーを追加\n        if (currentHeading.tagName === 'H2' || currentHeading.tagName === 'H3') {\n          const anchor = document.createElement('a');\n          currentHeading.appendChild(anchor);\n          anchor.setAttribute('href', '#' + currentHeading.id);\n          anchor.classList.add('link-icon');\n        }\n      }\n      if (headings.length === 0) {\n        //// 目次生成せず\n        document.getElementById('NavigationAndMainView').classList.add('-hidetoc');\n      } else {\n        //// 目次のHTMLを作り、DOM生成\n        tocContainer.innerHTML = `\n        <ul>\n          ${[...headings].map(heading => {\n          // if (heading.tagName === 'H3') return '';\n          const date = $(heading).next('.news_date');\n          const newHeading = $(heading).clone();\n          newHeading.children().remove();\n          return `\n            <li class=\"${heading.tagName}\">\n              <a href=\"#${heading.id}\" data-target=\"${heading.id}\">\n                ${newHeading.text()}\n                ${date.length ? `<span class=\"nav_date\">${date.text()}</span>` : ''}\n              </a>\n            </li>\n            `;\n        }).join('')}\n        </ul>\n        `;\n      }\n    }\n    //// 目次管理用の配列作成\n    $('a', tocContainer).each((index, item) => {\n      itemsOfToc.push({\n        elm: item, // 目次の項目\n        target: document.getElementById(item.dataset.target), // 目次の対象の見出し\n        rect: { y: undefined, height: undefined } // 対象の矩形情報（後で生成）\n      })\n    });\n  }\n\n  // セクションの矩形サイズを更新\n  function updateSectionSize() {\n    const container = document.querySelector('#MainContentView > .md-content');\n    for (let i = 0; i < itemsOfToc.length; i++) { // 目次管理用配列を回す\n      const item = itemsOfToc[i];\n      item.rect.y = item.target.offsetTop;\n      item.rect.height = (i < itemsOfToc.length - 1 ? itemsOfToc[i + 1].target.offsetTop : container.offsetTop + container.clientHeight) - item.rect.y; // 最後の項目でなければ、次の項目のY座標、そうであれば、.md-contentの高さからセクションのサイズを計測\n    }\n    updateHighlightingOfToc();\n  }\n\n  // 目次のハイライトを更新\n  function updateHighlightingOfToc() {\n    const screenTop = window.scrollY;\n    for (let i = 0; i < itemsOfToc.length; i++) { // 目次管理用配列を回す\n      const item = itemsOfToc[i];\n      const rect = intersect({ y: screenTop, height: window.innerHeight }, item.rect); // セクションの矩形と、現在表示中の矩形を重ね合わせる\n      if (rect.height > 0) { // 重なり合う領域があればハイライト\n        item.elm.classList.add('current');\n      } else {\n        item.elm.classList.remove('current');\n      }\n    }\n  }\n\n  // 矩形の重ね合わせを計算\n  function intersect(rect1, rect2) {\n    const\n      sy = Math.max(rect1.y, rect2.y),\n      ey = Math.min(rect1.y + rect1.height, rect2.y + rect2.height),\n      h = ey - sy;\n    if (h > 0) {\n      return { y: sy, height: h };\n    }\n    return { y: 0, height: 0 };\n  }\n\n\n  // 目次をクリックしたらスクロール\n  function setupSmoothScroll() {\n    $('#TableOfContents a').on('click', (e) => {\n      history.replaceState('', '', e.delegateTarget.href);\n      const target = document.getElementById(e.delegateTarget.dataset.target);\n      if (target) {\n        $('html').animate({\n          scrollTop: target.offsetTop - 16,\n          duration: 400\n        });\n      }\n      return false;\n    });\n  }\n\n}\n","// アコーディオンメニュー\nexport default function accordionMenu() {\n  $('.toggle-content-btn').on('click', function () {\n    const content = $(this).next('.accordion-content')\n    content.slideToggle(500)\n    $(this).toggleClass(\"active\");\n  });\n\n  $('.close-content-btn').click(function () {\n    const content = $(this).parent().parent()\n    content.slideToggle(500)\n    $(this).parent().parent().prev().removeClass(\"active\");\n  });\n}","// 外観変更スイッチ\nexport default function switchAppearance() {\n  const appearanceWwitch = document.querySelector('.appearance-switch');\n  if (appearanceWwitch) {\n    const buttons = appearanceWwitch.querySelectorAll('.button');\n    buttons.forEach(button => {\n      button.addEventListener('click', e => {\n        appearanceWwitch.parentNode.dataset.appearanceType = e.target.dataset.appearanceValue;\n        // ボタンのハイライト切替\n        buttons.forEach(button => {\n          if (button === e.target) {\n            button.classList.add('-current');\n          } else {\n            button.classList.remove('-current');\n          }\n        });\n      });\n    });\n  }\n}","// ライトボックス\nexport default function lightBox() {\n  $(document).ready(function () {\n    let closeText;\n    switch ($('html').attr('lang')) {\n      case 'ja':\n        closeText = '閉じる';\n        break;\n      case 'en':\n        closeText = 'Close';\n        break;\n    };\n    $(\".group1\").colorbox({ rel: 'group1', maxWidth: \"90%\", maxHeight: \"90%\", current: '{current} / {total}', opacity: 1, close: closeText , closeButton: true　});\n  });\n}\n"],"sourceRoot":""}