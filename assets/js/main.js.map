{"version":3,"sources":["../../_javascript/internalLink.js","../../_javascript/main.js","../../_javascript/accordionMenu.js","../../_javascript/switchAppearance.js","../../_javascript/taggingListView.js","../../_javascript/lightBox.js"],"names":["internalLink","document","getElementById","itemsOfToc","tocContainer","headings","querySelector","querySelectorAll","outline","currentNode","i","length","currentHeading","date","$","next","text","tagName","push","namedAnchor","setAttribute","name","getAttribute","textContent","replace","anchor","createElement","appendChild","id","classList","add","innerHTML","map","item","createItemOfToc","undefined","nodeName","subitem","join","each","index","elm","target","dataset","rect","y","height","createToc","on","e","history","replaceState","delegateTarget","href","animate","scrollTop","offsetTop","duration","window","container","clientHeight","updateHighlightingOfToc","trigger","hash","location","substr","decodedHash","decodeURIComponent","filter","screenTop","scrollY","intersect","innerHeight","remove","rect1","rect2","sy","Math","max","h","min","onload","this","slideToggle","toggleClass","click","parent","prev","removeClass","appearanceWwitch","buttons","forEach","button","addEventListener","parentNode","appearanceType","appearanceValue","switchAppearance","taggingListView","_step","categoryTags","affiliationTags","taggingItems","_iterator","_createForOfIteratorHelper","s","n","done","_step3","value","_iterator3","tag","array","contains","err","f","html","facetSearchTags","Object","keys","concat","selectedTags","$selectedTags","indexOf","splice","_step2","_iterator2","service","isHidden","tags","Array","from","_i","_tags","ready","colorbox","rel","maxWidth","maxHeight","current","opacity"],"mappings":"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","sourcesContent":["/* global $ */\n\n// 内部リンク\nexport default function internalLink() {\n  if (!document.getElementById('TableOfContents')) return;\n  \n  let itemsOfToc = []; // 目次管理用配列\n\n  createToc(); // 目次の生成\n  setupSmoothScroll(); // 目次をクリックしたらスクロール\n  $(window).on('resize', updateSectionSize).trigger('resize'); // セクションの矩形サイズを更新\n  $(window).on('scroll', updateHighlightingOfToc).trigger('scroll'); // 目次のハイライトを更新\n  // ハッシュが指定されていたら、そこまでスクロール\n  const hash = (window.location.hash.substr(1));\n  if (hash) {\n    const decodedHash = decodeURIComponent(hash);\n    const target = itemsOfToc.filter(item => item.target.id === decodedHash);\n    if (target.length > 0) {\n      $(target[0].elm).trigger('click');\n    }\n  }\n\n\n  // 目次の生成\n  function createToc() {\n    const tocContainer = document.getElementById('TableOfContents');\n    if (tocContainer) {\n      const postContent = document.querySelector('.md-content');\n      const headings = postContent.querySelectorAll('h2, h3, h4');\n      const outline = []; // 階層構造を持った見出しのリスト\n      let currentNode = outline;\n      for (let i = 0; i < headings.length; i++) {\n        const currentHeading = headings[i];\n        //// News Archiveに付与する日付の取得\n        const date = $(headings[i]).next('.news_date').text();\n\n        //// 階層構造を持った見出しのリストの作成\n        switch (currentHeading.tagName) {\n          case 'H2': // 大見出しの場合\n            currentNode = []; // 子の階層を作り、現在操作中の階層にする\n            outline.push({currentHeading: currentHeading, date: date}, currentNode); // 見出しリストに追加\n            break;\n          case 'H3':\n            currentNode.push(currentHeading); // 見出しリストの子の階層に追加\n            break;\n        }\n        \n        //// IDの付与\n        const namedAnchor = currentHeading.querySelector('a[name]');\n        if (namedAnchor) {\n          // 見出しにname属性持ちのアンカーがあれば、name属性をIDに \n          currentHeading.setAttribute('id', namedAnchor.name);\n        } else if (!currentHeading.getAttribute('id')) {\n          // そうでなく、かつ見出しにIDが付与されていなければ、見出し内容をIDに\n          // （ただしどうやらJekyllは自動的にそれをやっているっぽい。だとしたら不要\n          currentHeading.setAttribute('id', currentHeading.textContent.replace(/[\\/\\s]/g, '-'));\n        }\n        //// 見出しにリンク用のアンカーを追加\n        if (currentHeading.tagName === 'H2' || currentHeading.tagName === 'H3') {\n          const anchor = document.createElement('a');\n          currentHeading.appendChild(anchor);\n          anchor.setAttribute('href', '#' + currentHeading.id);\n          anchor.classList.add('link-icon');\n        }\n      }\n      //// 目次のHTMLを作り、DOM生成\n      tocContainer.innerHTML = '<ul>' + outline.map(item => createItemOfToc(item)).join('').replace(/<li><ul><\\/ul><\\/li>/g, '').replace(/<\\/li><li><ul><\\/ul>/g, '<ul>') + '</ul>';\n    }\n    //// 目次管理用の配列作成\n    $('a', tocContainer).each((index, item) => {\n      itemsOfToc.push({\n        elm: item, // 目次の項目\n        target: document.getElementById(item.dataset.target), // 目次の対象の見出し\n        rect: { y: undefined, height: undefined } // 対象の矩形情報（後で生成）\n      })\n    });\n  }\n  // 目次の各項目の生成（再帰処理をしてる）\n  function createItemOfToc(item) {\n    switch (true) {\n      case item.currentHeading !== undefined && item.currentHeading.nodeName !== undefined: // タグの場合、<LI>を追加\n        return '<li><a href=\"#' + item.currentHeading.id + '\" data-target=\"' + item.currentHeading.id + '\">' + item.currentHeading.textContent + '<span class=\"nav_date\">' + item.date + '</span></a></li>';\n      case item.currentHeading !== undefined && item.currentHeading.length !== undefined: // 配列の場合、<UL>を追加し、中身を再帰処理で生成\n        return '<li><ul>' + item.currentHeading.map(subitem => createItemOfToc(subitem)).join('') + '</ul></li>';\n    }\n  }\n\n  // セクションの矩形サイズを更新\n  function updateSectionSize() {\n    const container = document.querySelector('#MainContentView > .md-content');\n    for (let i = 0; i < itemsOfToc.length; i++) { // 目次管理用配列を回す\n      const item = itemsOfToc[i];\n      item.rect.y = item.target.offsetTop;\n      item.rect.height = (i < itemsOfToc.length - 1 ? itemsOfToc[i + 1].target.offsetTop : container.offsetTop + container.clientHeight) - item.rect.y; // 最後の項目でなければ、次の項目のY座標、そうであれば、.md-contentの高さからセクションのサイズを計測\n    }\n    updateHighlightingOfToc();\n  }\n\n  // 目次のハイライトを更新\n  function updateHighlightingOfToc() {\n    const screenTop = window.scrollY;\n    for (let i = 0; i < itemsOfToc.length; i++) { // 目次管理用配列を回す\n      const item = itemsOfToc[i];\n      const rect = intersect({y: screenTop, height: window.innerHeight}, item.rect); // セクションの矩形と、現在表示中の矩形を重ね合わせる\n      if (rect.height > 0) { // 重なり合う領域があればハイライト\n        item.elm.classList.add('current');\n      } else {\n        item.elm.classList.remove('current');\n      }\n    }\n  }\n\n  // 矩形の重ね合わせを計算\n  function intersect(rect1, rect2) {\n    const\n      sy = Math.max(rect1.y, rect2.y),\n      ey = Math.min(rect1.y + rect1.height, rect2.y + rect2.height),\n      h = ey - sy;\n    if (h > 0) {\n      return { y: sy, height: h };\n    }\n    return { y: 0, height: 0 };\n  }\n\n\n  // 目次をクリックしたらスクロール\n  function setupSmoothScroll() {\n    $('#TableOfContents a').on('click', (e) => {\n      history.replaceState('', '', e.delegateTarget.href);\n      const target = document.getElementById(e.delegateTarget.dataset.target);\n      if (target) {\n        $('html').animate({\n          scrollTop: target.offsetTop - 16,\n          duration: 400\n        });\n      }\n      return false;\n    });\n  }\n\n}\n","import internalLink from \"./internalLink\"\nimport accordionMenu from \"./accordionMenu\"\nimport switchAppearance from \"./switchAppearance\"\nimport taggingListView from \"./taggingListView\"\nimport lightBox from \"./lightBox\"\nwindow.onload = function () {\n\n  // 内部リンク\n  internalLink();\n  // アコーディオンメニュー\n  accordionMenu();\n  // 外観変更スイッチ\n  switchAppearance();\n  // サービス一覧\n  taggingListView();\n  // ライトボックス\n  lightBox();\n\n}\n","// アコーディオンメニュー\nexport default function accordionMenu() {\n  $('.toggle-content-btn').on('click', function () {\n    const content = $(this).next('.accordion-content')\n    content.slideToggle(500)\n    $(this).toggleClass(\"active\");\n  });\n\n  $('.close-content-btn').click(function () {\n    const content = $(this).parent().parent()\n    content.slideToggle(500)\n    $(this).parent().parent().prev().removeClass(\"active\");\n  });\n}","// 外観変更スイッチ\nexport default function switchAppearance() {\n  const appearanceWwitch = document.querySelector('.appearance-switch');\n  if (appearanceWwitch) {\n    const buttons = appearanceWwitch.querySelectorAll('.button');\n    buttons.forEach(button => {\n      button.addEventListener('click', e => {\n        appearanceWwitch.parentNode.dataset.appearanceType = e.target.dataset.appearanceValue;\n        // ボタンのハイライト切替\n        buttons.forEach(button => {\n          if (button === e.target) {\n            button.classList.add('-current');\n          } else {\n            button.classList.remove('-current');\n          }\n        });\n      });\n    });\n  }\n}","/* global $ */\n\n// サービス一覧\nexport default function taggingListView() {\n  const taggingListView = document.querySelector('.tagging-list-view');\n  if (taggingListView) {\n    // タグの収集\n    const categoryTags = {}, affiliationTags = {};\n    const taggingItems = taggingListView.querySelectorAll('.taggingitem')\n    for (const item of taggingItems) {\n      const tags = item.querySelectorAll('.tags > .tag-view');\n      for (const tag of tags) {\n        let array;\n        if (tag.classList.contains('-reverse')) {\n          // 所属\n          array = affiliationTags;\n        } else {\n          // カテゴリ\n          array = categoryTags;\n        }\n        if (!array[tag.dataset.tag]) {\n          array[tag.dataset.tag] = [];\n        }\n        array[tag.dataset.tag].push(item);\n      }\n    }\n    // ファセット検索用ビューの生成\n    let html = '';\n    const facetSearchTags = document.querySelector('.facet-search > .tags');\n    html += Object.keys(categoryTags).map(tag => `<li class=\"tag-view\" data-tag=\"${tag}\">${tag}<span class=\"count\">${categoryTags[tag].length}</span></li>`).join('');\n    html += Object.keys(affiliationTags).map(tag => `<li class=\"tag-view -reverse\" data-tag=\"${tag}\">${tag}<span class=\"count\">${affiliationTags[tag].length}</span></li>`).join('');\n    facetSearchTags.innerHTML = html;\n    // インタラクション\n    const selectedTags = [];\n    const $selectedTags = $('.tag-view', facetSearchTags);\n    $selectedTags.on('click', e => {\n      const tag = e.target.dataset.tag;\n      // 選択中のタグに追加・削除\n      if (selectedTags.indexOf(tag) === -1) {\n        selectedTags.push(tag);\n      } else {\n        selectedTags.splice(selectedTags.indexOf(tag), 1);\n      }\n      if (selectedTags.length) {\n        // 何か選択されている場合、選択されているもののみ表示\n        $selectedTags.each((index, elm) => {\n          if (selectedTags.indexOf(elm.dataset.tag) === -1) {\n            elm.classList.add('-disable');\n          } else {\n            elm.classList.remove('-disable');\n          }\n        });\n        for (const service of taggingItems) {\n          let isHidden = true;\n          const tags = Array.from(service.querySelectorAll('.tags > .tag-view'), tag => tag.dataset.tag);\n          for (const tag of tags) {\n            if (selectedTags.indexOf(tag) !== -1) {\n              isHidden = false;\n              break;\n            }\n          }\n          if (isHidden) {\n            service.classList.add('-hidden');\n          } else {\n            service.classList.remove('-hidden');\n          }\n        }\n      } else {\n        // 無選択の場合、全部選択\n        $selectedTags.each((index, elm) => elm.classList.remove('-disable'));\n        taggingItems.forEach(service => service.classList.remove('-hidden'));\n      }\n    });\n\n  }\n}","// ライトボックス\nexport default function lightBox() {\n  $(document).ready(function () {\n    $(\".group1\").colorbox({ rel: 'group1', maxWidth: \"90%\", maxHeight: \"90%\", current: '{current} / {total}', opacity: 1 });\n  });\n\n}\n"]}