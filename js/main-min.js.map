{"version":3,"sources":["internal_link.js","accordion_menu.js","switch_appearance.js","services_view.js","main.js"],"names":["internalLink","currentCheck","windowScrolltop","$","window","scrollTop","i","contentsArr","length","$navLink","removeClass","eq","addClass","createIndex","indexWrap","document","querySelector","postContent","hTags","querySelectorAll","indexList","createElement","listSrc","subListSrc","theHeading","id","setAttribute","tagName","textContent","innerHTML","outerHTML","console","log","Array","createContentsArr","targetContents","attr","charAt","targetContentsTop","offset","top","targetContentsBottom","outerHeight","on","smoothScroll","history","replaceState","this","href","animate","promise","Promise","resolve","reject","then","param","location","hash","match","element","getElementById","slice","scrollIntoView","behavior","inline","catch","error","accordionMenu","next","slideToggle","click","parents","slideUp","switchAppearance","appearanceWwitch","buttons","forEach","button","addEventListener","e","parentNode","dataset","appearanceType","target","appearanceValue","classList","add","remove","ServicesView","servicesView","categoryTags","affiliationTags","services","service","tags","tag","array","contains","push","html","facetSearchTags","Object","keys","map","join","selectedTags","$selectedTags","selectTag","indexOf","splice","each","index","elm","isHidden","from","onload"],"mappings":"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","sourcesContent":["/* global $ */\n\n// 内部リンク\nexport default function internalLink() {\n  let $navLink = \"\";\n\n  const createIndex = () => {\n    const indexWrap = document.querySelector(\".internal-link\"); //H2タグの前に挿入したdivタグ\n    if (indexWrap) {\n      const postContent = document.querySelector(\".md-content\"); //記事本文が書かれているラッパー\n      const hTags = postContent.querySelectorAll(\"h2, h3\"); //記事内のH2とH3タグを全て取得\n      if (hTags.length > 0) {\n        let indexList = document.createElement(\"ul\");\n        let listSrc = \"\";\n        let subListSrc = \"\"; //h3タグを取得しておくための変数\n\n        for (let i = 0; i < hTags.length; i++) {\n          let theHeading = hTags[i];\n          const id = \"index_id\" + i;\n          theHeading.setAttribute(\"id\", id); //リンクで飛べるようにIDをつける\n          if (theHeading.tagName === \"H2\") {\n            if (subListSrc !== \"\") {\n              //h3リストが生成されていれば\n              listSrc += \"<ul>\" + subListSrc + \"</ul>\";\n              subListSrc = \"\";\n            }\n            listSrc +=\n              '</li><li><a href=\"#index_id' +\n              i +\n              '\">' +\n              theHeading.textContent +\n              \"</a>\";\n          } else if (theHeading.tagName === \"H3\") {\n            subListSrc +=\n              '<li><a href=\"#index_id' +\n              i +\n              '\">' +\n              theHeading.textContent +\n              \"</a></li>\";\n          }\n        }\n\n        if (subListSrc !== \"\") {\n          //最後のリストがh3だった場合\n          listSrc += \"<ul>\" + subListSrc + \"</ul></li>\";\n        } else {\n          listSrc += \"</li>\";\n        }\n        indexList.innerHTML = listSrc;\n        //indexWrap.appendChild(indexList);\n        indexWrap.innerHTML = indexList.outerHTML;\n      }\n    }\n    $navLink = $(\"#TableOfContents li a\");\n    console.log(\"createIndex完了\");\n  };\n\n  // 各コンテンツのページ上部からの開始位置と終了位置を配列に格納しておく\n  let contentsArr = new Array();\n  const createContentsArr = () => {\n    for (let i = 0; i < $navLink.length; i++) {\n      // コンテンツのIDを取得\n      let targetContents = $navLink.eq(i).attr(\"href\");\n      // ページ内リンクでないナビゲーションが含まれている場合は除外する\n      if (targetContents.charAt(0) == \"#\") {\n        // ページ上部からコンテンツの開始位置までの距離を取得\n        let targetContentsTop = $(targetContents).offset().top;\n        // ページ上部からコンテンツの終了位置までの距離を取得\n        let targetContentsBottom =\n          targetContentsTop + $(targetContents).outerHeight(true) - 1;\n        // 配列に格納\n        contentsArr[i] = [targetContentsTop, targetContentsBottom];\n      }\n    }\n  };\n\n  // 現在地をチェックする\n  function currentCheck() {\n    // 現在のスクロール位置を取得\n    let windowScrolltop = $(window).scrollTop();\n    for (let i = 0; i < contentsArr.length; i++) {\n      // 現在のスクロール位置が、配列に格納した開始位置と終了位置の間にあるものを調べる\n      if (\n        contentsArr[i][0] <= windowScrolltop &&\n        contentsArr[i][1] >= windowScrolltop\n      ) {\n        // 開始位置と終了位置の間にある場合、ナビゲーションにclass=\"current\"をつける\n        $navLink.removeClass(\"current\");\n        $navLink.eq(i).addClass(\"current\");\n        i == contentsArr.length;\n      }\n    }\n  }\n\n  // ページ読み込み時とスクロール時に、現在地をチェックする\n  $(window).on(\"load scroll\", function () {\n    currentCheck();\n  });\n\n  // ナビゲーションクリック時の動作：スムーズスクロール・アドレスバーにID付与\n  const smoothScroll = () => {\n    $navLink.on(\"click\", function () {\n      history.replaceState(\"\", \"\", this.href);\n      $(\"html,body\").animate(\n        {\n          scrollTop: $($(this).attr(\"href\")).offset().top,\n        },\n        400\n      );\n      return false;\n    });\n  };\n\n  let promise = new Promise((resolve, reject) => {\n    createIndex();\n    resolve();\n  });\n\n  promise\n    \n    .then(() => {\n      createContentsArr();\n      console.log(\"createContentsArr完了\");\n    }).then(() => {\n      console.log(\"パラメーター確認開始\");\n      // URLパラメータ文字列を取得\n      let param = location.hash;\n      // 変数paramに#がついていれば\n      if (param.match('#')) {\n        // その#の位置に移動\n        let element = document.getElementById(param.slice(1));\n        element.scrollIntoView({\n          behavior: \"smooth\",\n          inline: \"nearest\",\n        });\n      }\n    }).then(() => {\n      smoothScroll();\n    }).catch((error) => {\n      // エラーハンドリング\n      console.error(error);\n    });\n    \n}","// アコーディオンメニュー\nexport default function accordionMenu() {\n  $('.accordion-menu dt').on('click', function () {\n\n    $(this)\n      .next('dd')\n      .slideToggle(500);\n  });\n\n  $('.close-btn').click(function () {\n    $(this).parents('.accordion-menu dd').slideUp();\n  });\n}","// 外観変更スイッチ\nexport default function switchAppearance() {\n  const appearanceWwitch = document.querySelector('.appearance-switch');\n  if (appearanceWwitch) {\n    const buttons = appearanceWwitch.querySelectorAll('.button');\n    buttons.forEach(button => {\n      button.addEventListener('click', e => {\n        appearanceWwitch.parentNode.dataset.appearanceType = e.target.dataset.appearanceValue;\n        // ボタンのハイライト切替\n        buttons.forEach(button => {\n          if (button === e.target) {\n            button.classList.add('-current');\n          } else {\n            button.classList.remove('-current');\n          }\n        });\n      });\n    });\n  }\n}","// サービス一覧\nexport default function ServicesView() {\n  const servicesView = document.getElementById('ServicesView');\n  if (servicesView) {\n    // タグの収集\n    const categoryTags = {}, affiliationTags = {};\n    const services = servicesView.querySelectorAll('.service')\n    for (const service of services) {\n      const tags = service.querySelectorAll('.tags > .service-tag');\n      for (const tag of tags) {\n        let array;\n        if (tag.classList.contains('-reverse')) {\n          // 所属\n          array = affiliationTags;\n        } else {\n          // カテゴリ\n          array = categoryTags;\n        }\n        if (!array[tag.dataset.tag]) {\n          array[tag.dataset.tag] = [];\n        }\n        array[tag.dataset.tag].push(service);\n      }\n    }\n    // ファセット検索用ビューの生成\n    let html = '';\n    const facetSearchTags = document.querySelector('.facet-search > .tags');\n    html += Object.keys(categoryTags).map(tag => `<li class=\"service-tag\" data-tag=\"${tag}\">${tag}<span class=\"count\">${categoryTags[tag].length}</span></li>`).join('');\n    html += Object.keys(affiliationTags).map(tag => `<li class=\"service-tag -reverse\" data-tag=\"${tag}\">${tag}<span class=\"count\">${affiliationTags[tag].length}</span></li>`).join('');\n    facetSearchTags.innerHTML = html;\n    // インタラクション\n    const selectedTags = [];\n    const $selectedTags = $('.service-tag', facetSearchTags);\n    $selectedTags.on('click', e => selectTag(e.target.dataset.tag));\n    function selectTag(tag) {\n      // 選択中のタグに追加・削除\n      if (selectedTags.indexOf(tag) === -1) {\n        selectedTags.push(tag);\n      } else {\n        selectedTags.splice(selectedTags.indexOf(tag), 1);\n      }\n      if (selectedTags.length) {\n        // 何か選択されている場合、選択されているもののみ表示\n        $selectedTags.each((index, elm) => {\n          if (selectedTags.indexOf(elm.dataset.tag) === -1) {\n            elm.classList.add('-disable');\n          } else {\n            elm.classList.remove('-disable');\n          }\n        });\n        for (const service of services) {\n          let isHidden = true;\n          const tags = Array.from(service.querySelectorAll('.tags > .service-tag'), tag => tag.dataset.tag);\n          for (const tag of tags) {\n            if (selectedTags.indexOf(tag) !== -1) {\n              isHidden = false;\n              break;\n            }\n          }\n          if (isHidden) {\n            service.classList.add('-hidden');\n          } else {\n            service.classList.remove('-hidden');\n          }\n        }\n      } else {\n        // 無選択の場合、全部選択\n        $selectedTags.each((index, elm) => elm.classList.remove('-disable'));\n        services.forEach(service => service.classList.remove('-hidden'));\n      }\n    }\n\n  }\n}","/* global $ */\n\nimport internalLink from \"./internal_link\"\nimport accordionMenu from \"./accordion_menu\"\nimport switchAppearance from \"./switch_appearance\"\nimport ServicesView from \"./services_view\"\nwindow.onload = function () {\n\n  // 内部リンク\n  internalLink();\n  // アコーディオンメニュー\n  accordionMenu();\n  // 外観変更スイッチ\n  switchAppearance();\n  // サービス一覧\n  ServicesView();\n\n}"]}